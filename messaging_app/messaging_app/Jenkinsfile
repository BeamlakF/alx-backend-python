pipeline {
    agent any

    environment {
        APP_DIR = 'messaging_app'
        PYTEST_JUNIT = "${APP_DIR}\\pytest-report.xml"
    }

    stages {
        stage('Checkout') {
            steps {
                bat """
                git clone https://github.com/<your-username>/alx-backend-python.git
                cd alx-backend-python
                git branch
                """
            }
        }

        stage('Install Dependencies') {
            steps {
                bat """
                cd ${APP_DIR}
                python -m venv .venv
                call .\\.venv\\Scripts\\activate
                if exist requirements.txt pip3 install -r requirements.txt
                pip3 install pytest
                """
            }
        }

        stage('Run Tests') {
            steps {
                bat """
                cd ${APP_DIR}
                call .\\.venv\\Scripts\\activate
                pytest --junitxml=${PYTEST_JUNIT}
                """
            }
            post {
                always {
                    junit allowEmptyResults: true, testResults: "${PYTEST_JUNIT}"
                }
            }
        }
    }
}
